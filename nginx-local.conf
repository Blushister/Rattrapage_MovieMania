events {
    worker_connections 1024;
}

http {
    # Include MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logs détaillés
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log debug;
    
    # Upstream vers les services Docker
    upstream frontend {
        server django_frontend:8000;
    }
    
    upstream users_api {
        server users_api:8888;
    }
    
    upstream recos_api {
        server rec_api:8000;
    }
    
    # Serveur HTTPS principal
    server {
        listen 8443 ssl http2;
        server_name localhost;
        
        ssl_certificate /etc/ssl/certs/cert.pem;
        ssl_certificate_key /etc/ssl/private/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        
        # Fichiers statiques
        location /static/ {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        # Frontend Django (racine)
        location / {
            error_log /var/log/nginx/django.log debug;
            access_log /var/log/nginx/django_access.log detailed;
            proxy_pass http://frontend;
            proxy_set_header Host localhost;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto http;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;
        }
        
        # API Users
        location /api/v1/users/ {
            proxy_pass http://users_api/api/v1/users/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        location /api/v1/login/ {
            proxy_pass http://users_api/api/v1/login/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        location /api/v1/genreusers/ {
            proxy_pass http://users_api/api/v1/genreusers/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        # API Recos
        location /api/recos/ {
            proxy_pass http://recos_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }
    
    # Redirection HTTP vers HTTPS
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 8080;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }
}
